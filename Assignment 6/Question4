#include <iostream>
using namespace std;

class Node {
public:
    char data;
    Node* next;
    Node* prev;
};

class DoublyLinkedList {
public:
    Node* head;
    Node* tail;

    DoublyLinkedList() {
        head = NULL;
        tail = NULL;
    }

    void insert(char ch) {
        Node* newNode = new Node();
        newNode->data = ch;
        newNode->next = NULL;
        newNode->prev = NULL;

        if (head == NULL) {
            head = tail = newNode;
        } else {
            tail->next = newNode;
            newNode->prev = tail;
            tail = newNode;
        }
    }

    void display() {
        Node* temp = head;
        while (temp != NULL) {
            cout << temp->data << " ";
            temp = temp->next;
        }
        cout << endl;
    }

    bool isPalindrome() {
        Node* left = head;
        Node* right = tail;

        while (left != NULL && right != NULL && left != right && right->next != left) {
            if (left->data != right->data)
                return false;
            left = left->next;
            right = right->prev;
        }
        return true;
    }
};

int main() {
    DoublyLinkedList list;
    int n;
    cout << "Enter number of characters: ";
    cin >> n;

    cout << "Enter characters: ";
    for (int i = 0; i < n; i++) {
        char ch;
        cin >> ch;
        list.insert(ch);
    }

    cout << "Doubly Linked List: ";
    list.display();

    if (list.isPalindrome())
        cout << "The list is a palindrome.";
    else
        cout << "The list is not a palindrome.";

    return 0;
}
